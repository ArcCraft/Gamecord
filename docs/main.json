{
  "meta": {
    "generator": "0.10.0",
    "format": 20,
    "date": 1632909478100
  },
  "custom": {
    "general": {
      "name": "General",
      "files": {
        "welcome": {
          "name": "Welcome",
          "type": "md",
          "content": "# GAMECORD\r\n<p align=\"center\"><img align=\"center\" style=\"width:0.5px\" src=\"https://cdn.discordapp.com/attachments/818900078077018162/867985070210809936/banner.png\"/></p><br/>\r\n<p align=\"center\">\r\n   <img alt=\"npm\" src=\"https://img.shields.io/npm/dt/discord-gamecord\">\r\n   <a href=\"https://discord.gg/invite/GaczkwfgV9\"><img src=\"https://badgen.net/discord/online-members/GaczkwfgV9\" alt=\"Discord\"></a>\r\n</p>\r\n      \r\n> **Discord Gamecord is a powerful module that allows you to play games within Discord :)**\r\n\r\n## **‚öôÔ∏è Installation** \r\n```js\r\nnpm i discord-gamecord\r\n```\r\n\r\n\r\n## **‚ú® Features**\r\n\r\n- Super simple and easy to use.\r\n- Beginner friendly.\r\n- Easy to Implement.\r\n- Great support and flexible.\r\n\r\n## **üìö Usage**\r\n```js\r\nconst { Snake } = require('discord-gamecord')\r\n\r\nnew Snake({\r\n  message: message,\r\n  embed: {\r\n    title: 'Snake Game',\r\n    color: '#7289da',\r\n    OverTitle: \"Game Over\",\r\n  },\r\n  snake: { head: 'üü¢', body: 'üü©', tail: 'üü¢' },\r\n  emojis: {\r\n    board: '‚¨õ', \r\n    food: 'üçé',\r\n    up: '‚¨ÜÔ∏è', \r\n    right: '‚û°Ô∏è',\r\n    down: '‚¨áÔ∏è',\r\n    left: '‚¨ÖÔ∏è',\r\n  },\r\n}).startGame()\r\n```\r\n\r\n\r\n## **‚úèÔ∏è Example**\r\n### **Looking for Examples? click here:** [**Examples!**](https://github.com/aniket091/Gamecord/tree/main/Examples)\r\n```js\r\nconst Discord = require('discord.js');\r\nconst client = new Discord.Client();\r\nconst { Snake } = require('discord-gamecord');\r\n\r\nclient.on('message', async (message) => {\r\n  if(message.content === '!snake') {\r\n    new Snake({\r\n      message: message,\r\n      embed: {\r\n        title: 'Snake Game',\r\n\tcolor: '#5865F2',\r\n\tOverTitle: \"Game Over\",\r\n      },\r\n      snake: { head: 'üü¢', body: 'üü©', tail: 'üü¢' },\r\n      emojis: {\r\n        board: '‚¨õ', \r\n        food: 'üçé',\r\n        up: '‚¨ÜÔ∏è', \r\n        down: '‚¨áÔ∏è',\r\n\tright: '‚û°Ô∏è',\r\n\tleft: '‚¨ÖÔ∏è',\r\n      }\r\n    }).startGame();\r\n  }\r\n});\r\n\r\nclient.login('DISCORD_BOT_TOKEN');\r\n```\r\n\r\n## **üì∑ Preview**\r\n<img src=\"https://cdn.discordapp.com/attachments/818900078077018162/868061592871383060/example2.png\">\r\n\r\n## **‚ùî Support**\r\n<a href=\"https://discord.gg/invite/GaczkwfgV9\"><img src=\"https://invidget.switchblade.xyz/GaczkwfgV9\" alt=\"Discord\"></a>\r\n",
          "path": "docs/general/welcome.md"
        }
      }
    },
    "examples": {
      "name": "Examples",
      "files": {
        "Connect4": {
          "name": "Connect4",
          "type": "md",
          "content": "# üß© Connect 4\r\n\r\n```js\r\nconst { Connect4 } = require('discord-gamecord')\r\n\r\nnew Connect4({\r\n  message: message,\r\n  slash_command: false,\r\n  opponent: message.mentions.users.first(),\r\n  embed: {\r\n    title: 'Connect 4',\r\n    color: '#5865F2',\r\n  },\r\n  emojis: {\r\n    player1: 'üîµ',\r\n    player2: 'üü°'\r\n  },\r\n  waitMessage: 'Waiting for the opponent...',\r\n  turnMessage: '{emoji} | Its turn of player **{player}**.',\r\n  winMessage: '{emoji} | **{winner}** won the game!',\r\n  gameEndMessage: 'The game went unfinished :(',\r\n  drawMessage: 'It was a draw!',\r\n  othersMessage: 'You are not allowed to use buttons for this message!',\r\n  askMessage: 'Hey {opponent}, {challenger} challenged you for a game of Connect 4!',\r\n  cancelMessage: 'Looks like they refused to have a game of Connect4. \\:(',\r\n  timeEndMessage: 'Since the opponent didnt answer, i dropped the game!',\r\n}).startGame()\r\n```",
          "path": "docs/examples/Connect4.md"
        },
        "GuessThePokemon": {
          "name": "GuessThePokemon",
          "type": "md",
          "content": "# üß© Guess The Pokemon\r\n\r\n```js\r\nconst { GuessThePokemon } = require('discord-gamecord')\r\n\r\nnew GuessThePokemon({\r\n  message: message,\r\n  slash_command: false,\r\n  embed: {\r\n    title: 'Who\\'s This Pokemon?',\r\n    footer: 'You have only 1 chance',\r\n    color: '#5865F2',\r\n  },\r\n  time: 60000,\r\n  thinkMessage: '**Thinking...**',\r\n  othersMessage: 'You are not allowed to use buttons for this message!',\r\n  winMessage: 'Nice! The pokemon was **{pokemon}**',\r\n  stopMessage: 'Better luck next time! It was a **{pokemon}**',\r\n  incorrectMessage: 'Nope! The pokemon was **{pokemon}**',\r\n}).startGame();\r\n```",
          "path": "docs/examples/GuessThePokemon.md"
        }
      }
    }
  },
  "classes": [
    {
      "name": "ClassyClass",
      "description": "A very classy class with lots of class",
      "extends": [
        [
          [
            "EventEmitter"
          ]
        ]
      ],
      "construct": {
        "name": "ClassyClass",
        "description": "Constructs a thing."
      },
      "props": [
        {
          "name": "thing",
          "description": "Just some thing",
          "nullable": true,
          "type": [
            [
              [
                "number"
              ]
            ]
          ],
          "meta": {
            "line": 18,
            "file": "SomeClass.js",
            "path": "test/src"
          }
        }
      ],
      "methods": [
        {
          "name": "doStuff",
          "description": "Does stuff.",
          "params": [
            {
              "name": "stuff",
              "description": "Stuff to do",
              "nullable": true,
              "type": [
                [
                  [
                    "string"
                  ]
                ]
              ]
            },
            {
              "name": "doer",
              "description": "Callback to do the stuff",
              "type": [
                [
                  [
                    "StuffDoer"
                  ]
                ]
              ]
            }
          ],
          "returns": {
            "types": [
              [
                [
                  "number"
                ]
              ]
            ],
            "description": "A thing",
            "nullable": true
          },
          "meta": {
            "line": 27,
            "file": "SomeClass.js",
            "path": "test/src"
          }
        },
        {
          "name": "hmm",
          "description": "Who knows what this does.",
          "emits": [
            "ClassyClass#event:thingDone"
          ],
          "meta": {
            "line": 37,
            "file": "SomeClass.js",
            "path": "test/src"
          }
        }
      ],
      "events": [
        {
          "name": "thingDone",
          "description": "Emitted when a thing is done",
          "params": [
            {
              "name": "thingy",
              "description": "Thing",
              "type": [
                [
                  [
                    "SomeThing"
                  ]
                ]
              ]
            }
          ],
          "meta": {
            "line": 40,
            "file": "SomeClass.js",
            "path": "test/src"
          }
        }
      ],
      "meta": {
        "line": 11,
        "file": "SomeClass.js",
        "path": "test/src"
      }
    }
  ],
  "interfaces": [],
  "typedefs": [
    {
      "name": "SomeThing",
      "description": "Just some thing",
      "type": [
        [
          [
            "Object"
          ]
        ]
      ],
      "props": [
        {
          "name": "someNumber",
          "description": "A really cool number",
          "type": [
            [
              [
                "number"
              ]
            ]
          ]
        }
      ],
      "meta": {
        "line": 49,
        "file": "SomeClass.js",
        "path": "test/src"
      }
    },
    {
      "name": "StuffDoer",
      "description": "Does some stuff with some other stuff.",
      "type": [
        [
          [
            "function"
          ]
        ]
      ],
      "params": [
        {
          "name": "stuff",
          "description": "Stuff to use to do stuff",
          "nullable": true,
          "type": [
            [
              [
                "string"
              ]
            ]
          ]
        }
      ],
      "meta": {
        "line": 55,
        "file": "SomeClass.js",
        "path": "test/src"
      }
    }
  ],
  "externals": [
    {
      "name": "ClientOptions",
      "see": [
        "{@link http://hydrabolt.github.io/discord.js/#!/docs/tag/master/typedef/ClientOptions}"
      ],
      "meta": {
        "line": 61,
        "file": "SomeClass.js",
        "path": "test/src"
      }
    }
  ]
}
